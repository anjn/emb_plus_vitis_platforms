# Copyright (C) 2023 - 2024 Advanced Micro Devices, Inc.
# SPDX-License-Identifier: MIT

# Set the necessary Vivado params for the platform build
enable_beta_device xcve2302-*
set_param bitstream.enablePR 8519
set_param bd.bdc.use_training_module 1
set_param bd.test "no_noc_ini_stub"

# Set project variables
set proj_dir ./project
set userBD ulp
set board rave_ve2302
set bd_tcl_dir ./scripts
set output_dir ./xsa
set output {xsa}
set xdc_list {./xdc/impl.xdc ./xdc/pcie.xdc ./xdc/lpddr_dual_ch_bk.xdc ./xdc/pblock.xdc }
set ip_repo_path {./ip}
set jobs 8
set silicon prod
set uuid 0000000000000000000000009447ee7c

# parse arguments
for { set i 0 } { $i < $argc } { incr i } {
  # jobs
  if { [lindex $argv $i] == "-jobs" } {
    incr i
    set jobs [lindex $argv $i]
  }
  # silicon
  if { [lindex $argv $i] == "-silicon" } {
    incr i
    set silicon [lindex $argv $i]
  }
  # uuid
  if { [lindex $argv $i] == "-uuid" } {
    incr i
    set uuid [lindex $argv $i]
  }
}

if {$silicon == "es1"} {
  set part xcve2302-sfva784-2MP-e-S-es1
  set proj_name ve2302_es1_pcie_qdma
} else {
  set part xcve2302-sfva784-2MP-e-S
  set proj_name ve2302_pcie_qdma
}

create_project -name $proj_name -force -dir $proj_dir -part $part
#set_property board_part $proj_board [current_project]

import_files -fileset constrs_1 $xdc_list

set_property ip_repo_paths $ip_repo_path [current_project]
update_ip_catalog
config_ip_cache -import_from_project -use_cache_location cache

source $bd_tcl_dir/ulp.tcl
source $bd_tcl_dir/config_bd.tcl

save_bd_design

# Import constraint and hook files, and set their properties as required
import_files -fileset utils_1   -norecurse "./scripts/opt.pre.tcl"
set_property used_in_synthesis false          [get_files *impl*.xdc]
set_property STEPS.OPT_DESIGN.TCL.PRE         [get_files *opt.pre.tcl]                [get_runs impl_1]

make_wrapper -files [get_files ${proj_name}.bd] -top
import_files -force -norecurse $proj_dir/${proj_name}.srcs/sources_1/bd/${proj_name}/hdl/${proj_name}_wrapper.v
update_compile_order
set_property top ${proj_name}_wrapper [current_fileset]
update_compile_order -fileset sources_1

save_bd_design
validate_bd_design

# Generate all output products
generate_target all [get_files ${proj_name}.bd]

set fd [open $proj_dir/README.hw w]

puts $fd "##########################################################################"
puts $fd "This is a brief document containing design specific details for : ${board}"
puts $fd "This is auto-generated by Petalinux ref-design builder created @ [clock format [clock seconds] -format {%a %b %d %H:%M:%S %Z %Y}]"
puts $fd "##########################################################################"

set board_part [get_board_parts [current_board_part -quiet]]
if { $board_part != ""} {
	puts $fd "BOARD: $board_part"
}

set design_name [get_property NAME [get_bd_designs]]
puts $fd "BLOCK DESIGN: $design_name"


set columns {%40s%30s%15s%50s}
puts $fd [string repeat - 150]
puts $fd [format $columns "MODULE INSTANCE NAME" "IP TYPE" "IP VERSION" "IP"]
puts $fd [string repeat - 150]

foreach ip [get_ips] {
	set catlg_ip [get_ipdefs -all [get_property IPDEF $ip]]
	puts $fd [format $columns [get_property NAME $ip] [get_property NAME $catlg_ip] [get_property VERSION $catlg_ip] [get_property VLNV $catlg_ip]]
}

close $fd

# Set the DFX configuration, then run all synthesis and implementation steps
create_pr_configuration -name config_1 -partitions [list ${proj_name}_i/${userBD}:${userBD}_inst_0]
set_property PR_CONFIGURATION config_1 [get_runs impl_1]

set_property strategy Performance_Auto_3 [get_runs impl_1]

# Synthesize
launch_runs synth_1 -jobs $jobs
wait_on_run synth_1

# Replace the black box with the synthesized netlist
open_run synth_1 -name synth_1 -pr_config [current_pr_configuration]
read_checkpoint -cell [get_cells */blp/qdma_0/inst/inst] ./src/qdma.dcp
close_design

# Waive DRC error
add_files -fileset constrs_1 -norecurse xdc/waiver.xdc
set_property USED_IN write_bitstream [get_files xdc/waiver.xdc]

launch_runs impl_1 -to_step write_device_image -jobs $jobs
wait_on_run impl_1
open_run impl_1

set_property platform.board_id                        $proj_name              [current_project]
set_property platform.name                            $proj_name              [current_project]
set_property platform.board_vendor                    "xilinx"                [current_project]
set_property platform.version                         "1.0"                   [current_project]
set_property platform.board_memories                  {{mem0 ddr4 6GB 5497558138880 5504000589823}} [current_project]
set_property platform.board_interface_name            "PCIe"                  [current_project]
set_property platform.board_interface_type            "gen4x8"                [current_project]
set_property platform.num_compute_units               "4"                     [current_project]
set_property platform.platform_state                  "impl"                  [current_project]
set_property platform.uses_pr                         true                    [current_project]
set_property platform.extensible                      true                    [current_project]
set_property platform.pcie_id_vendor                  "0x10ee"                [current_project]
set_property platform.pcie_id_device                  "0x5700"                [current_project]
set_property platform.pcie_id_subsystem               "0x000e"                [current_project]
set_property platform.dr_inst_path                    "${proj_name}_i/${userBD}" [current_project]
set_property platform.design_intent.embedded          false                   [current_project]
set_property platform.design_intent.server_managed    true                    [current_project]
set_property platform.design_intent.external_host     true                    [current_project]
set_property platform.design_intent.datacenter        true                    [current_project]
set_property platform.default_output_type             "xclbin"                [current_project]
#set_property platform.pre_sys_link_overlay_tcl_hook   "${userDir}/constraints/sys_link_overlay.pre.tcl"  [current_project]
#set_property platform.post_sys_link_overlay_tcl_hook  "${userDir}/constraints/sys_link_overlay.post.tcl" [current_project]
#set_property platform.run.steps.opt_design.tcl.pre    "${userDir}/constraints/opt.pre.tcl"               [current_project]
#set_property platform.run.steps.opt_design.tcl.post   "${userDir}/constraints/opt.post.tcl"              [current_project]
#set_property platform.impl_constraint_files           "[list ${userDir}/constraints/impl.xdc,NORMAL,implementation]" [current_project]
set_property platform.link_xp_switches_default        "{vivado_param:hd.enablePR=2591} {vivado_param:bitstream.enablePR=8519} {vivado_param:project.ensureVersalHasCIPS=false} {vivado_param:bd.enableAutoConnectionsInNoc=1} {vivado_param:constr.restoreXDEFConstraintsASTCL=1} {vivado_param:ips.enableSLRParameter=4}" [current_project]

write_hw_platform -force -fixed -hw -static ${proj_dir}/${proj_name}_base.xsa
validate_hw_platform -verbose ${proj_dir}/${proj_name}_base.xsa
write_hw_platform -force -hw -rp ${proj_name}_i/${userBD} ${proj_dir}/${proj_name}.xsa
validate_hw_platform -verbose ${proj_dir}/${proj_name}.xsa

exit

